/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as GetstartedRouteImport } from './routes/getstarted'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MarketplaceIndexRouteImport } from './routes/marketplace/index'

const GetstartedRoute = GetstartedRouteImport.update({
  id: '/getstarted',
  path: '/getstarted',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceIndexRoute = MarketplaceIndexRouteImport.update({
  id: '/marketplace/',
  path: '/marketplace/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/getstarted': typeof GetstartedRoute
  '/marketplace': typeof MarketplaceIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/getstarted': typeof GetstartedRoute
  '/marketplace': typeof MarketplaceIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/getstarted': typeof GetstartedRoute
  '/marketplace/': typeof MarketplaceIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/getstarted' | '/marketplace'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/getstarted' | '/marketplace'
  id: '__root__' | '/' | '/getstarted' | '/marketplace/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GetstartedRoute: typeof GetstartedRoute
  MarketplaceIndexRoute: typeof MarketplaceIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/getstarted': {
      id: '/getstarted'
      path: '/getstarted'
      fullPath: '/getstarted'
      preLoaderRoute: typeof GetstartedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/': {
      id: '/marketplace/'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GetstartedRoute: GetstartedRoute,
  MarketplaceIndexRoute: MarketplaceIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
