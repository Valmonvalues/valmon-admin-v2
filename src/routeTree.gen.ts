/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as GetstartedRouteImport } from './routes/getstarted'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MarketplaceIndexRouteImport } from './routes/marketplace/index'
import { Route as dashboardWalletIndexRouteImport } from './routes/(dashboard)/wallet/index'
import { Route as dashboardUsersIndexRouteImport } from './routes/(dashboard)/users/index'
import { Route as dashboardSummaryIndexRouteImport } from './routes/(dashboard)/summary/index'
import { Route as dashboardSkillsIndexRouteImport } from './routes/(dashboard)/skills/index'
import { Route as dashboardSettingsIndexRouteImport } from './routes/(dashboard)/settings/index'
import { Route as dashboardResolutionIndexRouteImport } from './routes/(dashboard)/resolution/index'
import { Route as dashboardProfileIndexRouteImport } from './routes/(dashboard)/profile/index'
import { Route as dashboardMarketPlaceIndexRouteImport } from './routes/(dashboard)/marketPlace/index'
import { Route as dashboardAccountIndexRouteImport } from './routes/(dashboard)/account/index'
import { Route as dashboardUsersUserIdRouteImport } from './routes/(dashboard)/users/$userId'
import { Route as dashboardProfileUserIdRouteImport } from './routes/(dashboard)/profile/$userId'

const GetstartedRoute = GetstartedRouteImport.update({
  id: '/getstarted',
  path: '/getstarted',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceIndexRoute = MarketplaceIndexRouteImport.update({
  id: '/marketplace/',
  path: '/marketplace/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardWalletIndexRoute = dashboardWalletIndexRouteImport.update({
  id: '/(dashboard)/wallet/',
  path: '/wallet/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardUsersIndexRoute = dashboardUsersIndexRouteImport.update({
  id: '/(dashboard)/users/',
  path: '/users/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardSummaryIndexRoute = dashboardSummaryIndexRouteImport.update({
  id: '/(dashboard)/summary/',
  path: '/summary/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardSkillsIndexRoute = dashboardSkillsIndexRouteImport.update({
  id: '/(dashboard)/skills/',
  path: '/skills/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardSettingsIndexRoute = dashboardSettingsIndexRouteImport.update({
  id: '/(dashboard)/settings/',
  path: '/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardResolutionIndexRoute =
  dashboardResolutionIndexRouteImport.update({
    id: '/(dashboard)/resolution/',
    path: '/resolution/',
    getParentRoute: () => rootRouteImport,
  } as any)
const dashboardProfileIndexRoute = dashboardProfileIndexRouteImport.update({
  id: '/(dashboard)/profile/',
  path: '/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardMarketPlaceIndexRoute =
  dashboardMarketPlaceIndexRouteImport.update({
    id: '/(dashboard)/marketPlace/',
    path: '/marketPlace/',
    getParentRoute: () => rootRouteImport,
  } as any)
const dashboardAccountIndexRoute = dashboardAccountIndexRouteImport.update({
  id: '/(dashboard)/account/',
  path: '/account/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardUsersUserIdRoute = dashboardUsersUserIdRouteImport.update({
  id: '/(dashboard)/users/$userId',
  path: '/users/$userId',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardProfileUserIdRoute = dashboardProfileUserIdRouteImport.update({
  id: '/(dashboard)/profile/$userId',
  path: '/profile/$userId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/getstarted': typeof GetstartedRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/profile/$userId': typeof dashboardProfileUserIdRoute
  '/users/$userId': typeof dashboardUsersUserIdRoute
  '/account': typeof dashboardAccountIndexRoute
  '/marketPlace': typeof dashboardMarketPlaceIndexRoute
  '/profile': typeof dashboardProfileIndexRoute
  '/resolution': typeof dashboardResolutionIndexRoute
  '/settings': typeof dashboardSettingsIndexRoute
  '/skills': typeof dashboardSkillsIndexRoute
  '/summary': typeof dashboardSummaryIndexRoute
  '/users': typeof dashboardUsersIndexRoute
  '/wallet': typeof dashboardWalletIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/getstarted': typeof GetstartedRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/profile/$userId': typeof dashboardProfileUserIdRoute
  '/users/$userId': typeof dashboardUsersUserIdRoute
  '/account': typeof dashboardAccountIndexRoute
  '/marketPlace': typeof dashboardMarketPlaceIndexRoute
  '/profile': typeof dashboardProfileIndexRoute
  '/resolution': typeof dashboardResolutionIndexRoute
  '/settings': typeof dashboardSettingsIndexRoute
  '/skills': typeof dashboardSkillsIndexRoute
  '/summary': typeof dashboardSummaryIndexRoute
  '/users': typeof dashboardUsersIndexRoute
  '/wallet': typeof dashboardWalletIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/getstarted': typeof GetstartedRoute
  '/marketplace/': typeof MarketplaceIndexRoute
  '/(dashboard)/profile/$userId': typeof dashboardProfileUserIdRoute
  '/(dashboard)/users/$userId': typeof dashboardUsersUserIdRoute
  '/(dashboard)/account/': typeof dashboardAccountIndexRoute
  '/(dashboard)/marketPlace/': typeof dashboardMarketPlaceIndexRoute
  '/(dashboard)/profile/': typeof dashboardProfileIndexRoute
  '/(dashboard)/resolution/': typeof dashboardResolutionIndexRoute
  '/(dashboard)/settings/': typeof dashboardSettingsIndexRoute
  '/(dashboard)/skills/': typeof dashboardSkillsIndexRoute
  '/(dashboard)/summary/': typeof dashboardSummaryIndexRoute
  '/(dashboard)/users/': typeof dashboardUsersIndexRoute
  '/(dashboard)/wallet/': typeof dashboardWalletIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/getstarted'
    | '/marketplace'
    | '/profile/$userId'
    | '/users/$userId'
    | '/account'
    | '/marketPlace'
    | '/profile'
    | '/resolution'
    | '/settings'
    | '/skills'
    | '/summary'
    | '/users'
    | '/wallet'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/getstarted'
    | '/marketplace'
    | '/profile/$userId'
    | '/users/$userId'
    | '/account'
    | '/marketPlace'
    | '/profile'
    | '/resolution'
    | '/settings'
    | '/skills'
    | '/summary'
    | '/users'
    | '/wallet'
  id:
    | '__root__'
    | '/'
    | '/getstarted'
    | '/marketplace/'
    | '/(dashboard)/profile/$userId'
    | '/(dashboard)/users/$userId'
    | '/(dashboard)/account/'
    | '/(dashboard)/marketPlace/'
    | '/(dashboard)/profile/'
    | '/(dashboard)/resolution/'
    | '/(dashboard)/settings/'
    | '/(dashboard)/skills/'
    | '/(dashboard)/summary/'
    | '/(dashboard)/users/'
    | '/(dashboard)/wallet/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GetstartedRoute: typeof GetstartedRoute
  MarketplaceIndexRoute: typeof MarketplaceIndexRoute
  dashboardProfileUserIdRoute: typeof dashboardProfileUserIdRoute
  dashboardUsersUserIdRoute: typeof dashboardUsersUserIdRoute
  dashboardAccountIndexRoute: typeof dashboardAccountIndexRoute
  dashboardMarketPlaceIndexRoute: typeof dashboardMarketPlaceIndexRoute
  dashboardProfileIndexRoute: typeof dashboardProfileIndexRoute
  dashboardResolutionIndexRoute: typeof dashboardResolutionIndexRoute
  dashboardSettingsIndexRoute: typeof dashboardSettingsIndexRoute
  dashboardSkillsIndexRoute: typeof dashboardSkillsIndexRoute
  dashboardSummaryIndexRoute: typeof dashboardSummaryIndexRoute
  dashboardUsersIndexRoute: typeof dashboardUsersIndexRoute
  dashboardWalletIndexRoute: typeof dashboardWalletIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/getstarted': {
      id: '/getstarted'
      path: '/getstarted'
      fullPath: '/getstarted'
      preLoaderRoute: typeof GetstartedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/': {
      id: '/marketplace/'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/wallet/': {
      id: '/(dashboard)/wallet/'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof dashboardWalletIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/users/': {
      id: '/(dashboard)/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof dashboardUsersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/summary/': {
      id: '/(dashboard)/summary/'
      path: '/summary'
      fullPath: '/summary'
      preLoaderRoute: typeof dashboardSummaryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/skills/': {
      id: '/(dashboard)/skills/'
      path: '/skills'
      fullPath: '/skills'
      preLoaderRoute: typeof dashboardSkillsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/settings/': {
      id: '/(dashboard)/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof dashboardSettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/resolution/': {
      id: '/(dashboard)/resolution/'
      path: '/resolution'
      fullPath: '/resolution'
      preLoaderRoute: typeof dashboardResolutionIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/profile/': {
      id: '/(dashboard)/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof dashboardProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/marketPlace/': {
      id: '/(dashboard)/marketPlace/'
      path: '/marketPlace'
      fullPath: '/marketPlace'
      preLoaderRoute: typeof dashboardMarketPlaceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/account/': {
      id: '/(dashboard)/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof dashboardAccountIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/users/$userId': {
      id: '/(dashboard)/users/$userId'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof dashboardUsersUserIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/profile/$userId': {
      id: '/(dashboard)/profile/$userId'
      path: '/profile/$userId'
      fullPath: '/profile/$userId'
      preLoaderRoute: typeof dashboardProfileUserIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GetstartedRoute: GetstartedRoute,
  MarketplaceIndexRoute: MarketplaceIndexRoute,
  dashboardProfileUserIdRoute: dashboardProfileUserIdRoute,
  dashboardUsersUserIdRoute: dashboardUsersUserIdRoute,
  dashboardAccountIndexRoute: dashboardAccountIndexRoute,
  dashboardMarketPlaceIndexRoute: dashboardMarketPlaceIndexRoute,
  dashboardProfileIndexRoute: dashboardProfileIndexRoute,
  dashboardResolutionIndexRoute: dashboardResolutionIndexRoute,
  dashboardSettingsIndexRoute: dashboardSettingsIndexRoute,
  dashboardSkillsIndexRoute: dashboardSkillsIndexRoute,
  dashboardSummaryIndexRoute: dashboardSummaryIndexRoute,
  dashboardUsersIndexRoute: dashboardUsersIndexRoute,
  dashboardWalletIndexRoute: dashboardWalletIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
